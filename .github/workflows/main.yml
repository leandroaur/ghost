name: nomad-pack

on:
  push:
    paths:
      - 'ghost.nomad'
      - 'images/**'

jobs:
  setup-nomad-pack:
    runs-on: ubuntu-latest
    name: Run Nomad Pack
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG="leandroaurelio/ghost:${{ github.run_number }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

          # Tag the image as 'latest'
          docker tag $IMAGE_TAG leandroaurelio/ghost:latest
          docker push leandroaurelio/ghost:latest

      - name: Replace Variables for Deploy
        run: |
          if [[ "${{ github.ref_name }}" == "bench" ]]; then
            NAMESPACE="${{ secrets.BENCH_NAMESPACE }}"
            SITE_URL="${{ secrets.BENCH_SITE_URL }}"
            PORT="${{ secrets.BENCH_PORT }}"
          elif [[ "${{ github.ref_name }}" == "master" ]]; then
            NAMESPACE="${{ secrets.PROD_NAMESPACE }}"
            SITE_URL="${{ secrets.PROD_SITE_URL }}"
            PORT="${{ secrets.PROD_PORT }}"
          else
            echo "Branch não reconhecida. Abortando."
            exit 1
          fi
  
          # Substituir os placeholders no arquivo ghost.nomad
          sed -i "s|__NAMESPACE__|$NAMESPACE|g" ghost.nomad
          sed -i "s|__SITE_URL__|$SITE_URL|g" ghost.nomad
          sed -i "s|__PORT__|$PORT|g" ghost.nomad

      - name: Deploy nomad
        uses: rluisr/nomad-actions@master

      - name: Deploy
        run: |
          export NOMAD_ADDR="https://nomad.leandroaurelio.com"

          # Substituir placeholders pelos secrets
          
          sed -i "s|__USER_MAIL__|${{ secrets.USER_MAIL }}|g" ghost.nomad
          sed -i "s|__USER_PASSWORD__|${{ secrets.USER_PASSWORD }}|g" ghost.nomad
          sed -i "s|__MYSQL_ROOT_PASSWORD__|${{ secrets.MYSQL_ROOT_PASSWORD }}|g" ghost.nomad
          sed -i "s|__MYSQL_DATABASE__|${{ secrets.MYSQL_DATABASE }}|g" ghost.nomad
          sed -i "s|__MYSQL_USER__|${{ secrets.MYSQL_USER }}|g" ghost.nomad
          sed -i "s|__MYSQL_PASSWORD__|${{ secrets.MYSQL_PASSWORD }}|g" ghost.nomad
          
          # Planeja o job e captura o Job Modify Index
          INDEX=$(nomad job plan ghost.nomad | awk '/Job Modify Index/ {print $4}')
          echo "Job Modify Index: $INDEX"

          # Executa o job com o índice capturado
          nomad job run -namespace=$NAMESPACE -check-index $INDEX ghost.nomad || echo "Erro transitório ignorado"

          # Aguarda até o deployment ser criado
          echo "Aguardando deployment ser registrado..."
          DEPLOYMENT_ID=""
          for i in {1..10}; do
            DEPLOYMENT_ID=$(nomad job status -namespace=$NAMESPACE ghost-$NAMESPACE | awk '/Deployment/ {print $NF}')
            if [[ -n "$DEPLOYMENT_ID" ]]; then
              break
            fi
            echo "Tentativa $i: Deployment ID ainda não encontrado..."
            sleep 5
          done

          if [[ -z "$DEPLOYMENT_ID" ]]; then
            echo "Erro: Deployment ID não encontrado."
            exit 1
          fi
          echo "Deployment ID: $DEPLOYMENT_ID"

          # Aguarda a finalização do deployment
          echo "Aguardando finalização do deploy..."
          while true; do
            STATUS=$(nomad deployment status -namespace=$NAMESPACE $DEPLOYMENT_ID | awk -F= '/Status/ {gsub(/ /, "", $2); print $2}')
            echo "Status atual: $STATUS"

            if [[ "$STATUS" == "successful" ]]; then
              echo "Deploy finalizado com sucesso!"
              break
            elif [[ "$STATUS" == "failed" ]]; then
              echo "Erro no deploy!"
              exit 1
            elif [[ -z "$STATUS" ]]; then
              echo "Erro: Status do deploy não encontrado. Verifique manualmente."
              exit 1
           fi

            sleep 10
          done

          # Exibe o status do job
          nomad status -namespace=$NAMESPACE ghost-$NAMESPACE
        env:
          NOMAD_ADDR: "https://nomad.leandroaurelio.com"
